// 重置
* {
  box-sizing: border-box;
  outline: none;
}

html {
  font-size: 13px;
}

body {
  margin: 0;
  // 非衬线字体
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.2em;
  background-color: #f1f1f1;
}

a {
  color: #999;
}

// colors 定义颜色变量
$colors: (
  "primary": #db9e3f,
  "white": #fff,
  "light": #f9f9f9,
  "black": #000,
  "dark-1": #343440,
  "dark": #212222,
  "grey": #999,
);

@each $colorKey, $color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }

  .bg-#{$colorKey} {
    background-color: $color;
  }
}

// text 文本
// 第一个为 变量  第二个为 集合
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var;
  }
}

// font size 字体大小
$base-font-size: 1rem;
$font-size: (
  xs: 0.7692,
  // 10px
    sm: 0.9231,
  // 12px
    md: 1,
  // 13px
    lg: 1.0769,
  // 14px
    xl: 1.2308 // 16px,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
);

@each $sizeKey, $size in $font-size {
  .fs-#{$sizeKey} {
    font-size: $size * $base-font-size;
  }
}

// flex 布局
.d-flex {
  display: flex;
}
.flex-column {
  flex-direction: column;
}
$flex-jc: (
  start: flex-start,
  end: flex-end,
  center: center,
  between: space-between,
  around: space-around,
);

@each $key, $value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
}

$flex-ai: (
  start: flex-start,
  end: flex-end,
  center: center,
  stretch: stretch,
);

@each $key, $value in $flex-ai {
  .ai-#{$key} {
    align-items: $value;
  }
}
.flex-1 {
  flex: 1;
}
.flex-grow-1 {
  flex-grow: 1;
}
// spacing 间距
$spacing-types: (
  m: margin,
  p: padding,
);
// 方向
$spcacing-directions: (
  t: top,
  r: right,
  b: bottom,
  l: left,
);
// 倍数
$spacing-base-size: 1rem;
$spacing-sizes: (
  0: 0,
  1: 0.25,
  2: 0.5,
  3: 1,
  4: 1.5,
  5: 3,
);
@each $typeKey, $type in $spacing-types {
  // m:0 上下左右
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $spacing-base-size;
    }
  }
  // mx-1 水平方向
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size * $spacing-base-size;
      #{$type}-right: $size * $spacing-base-size;
    }
  }
  // my-1 垂直方向
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $spacing-base-size;
      #{$type}-bottom: $size * $spacing-base-size;
    }
  }
  // mt-1 单方向
  @each $directionKey, $direction in $spcacing-directions {
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $spacing-base-size;
      }
    }
  }
}
